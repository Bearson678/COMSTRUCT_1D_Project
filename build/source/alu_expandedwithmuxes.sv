/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module alu_expandedwithmuxes (
        input wire [31:0] rd1,
        input wire [31:0] rd2,
        input wire [1:0] asel,
        input wire [1:0] bsel,
        input wire [1:0] wdsel,
        input wire [5:0] alufn_Signal,
        output reg [31:0] alu_output
    );
    logic [31:0] M_alu_chopsticks_a;
    logic [31:0] M_alu_chopsticks_b;
    logic [5:0] M_alu_chopsticks_alufn;
    logic [31:0] M_alu_chopsticks_out;
    logic M_alu_chopsticks_z;
    logic M_alu_chopsticks_v;
    logic M_alu_chopsticks_n;
    
    alu alu_chopsticks (
        .a(M_alu_chopsticks_a),
        .b(M_alu_chopsticks_b),
        .alufn(M_alu_chopsticks_alufn),
        .out(M_alu_chopsticks_out),
        .z(M_alu_chopsticks_z),
        .v(M_alu_chopsticks_v),
        .n(M_alu_chopsticks_n)
    );
    
    
    always @* begin
        M_alu_chopsticks_alufn = alufn_Signal;
        
        case (asel)
            2'h0: begin
                M_alu_chopsticks_a = rd1;
            end
            2'h1: begin
                M_alu_chopsticks_a = 2'h3;
            end
            2'h2: begin
                M_alu_chopsticks_a = 3'h5;
            end
            2'h3: begin
                M_alu_chopsticks_a = 4'ha;
            end
            default: begin
                M_alu_chopsticks_a = 1'h0;
            end
        endcase
        
        case (bsel)
            2'h0: begin
                M_alu_chopsticks_b = rd2;
            end
            2'h1: begin
                M_alu_chopsticks_b = 1'h0;
            end
            2'h2: begin
                M_alu_chopsticks_b = 1'h1;
            end
            2'h3: begin
                M_alu_chopsticks_b = 2'h2;
            end
            default: begin
                M_alu_chopsticks_b = 1'h0;
            end
        endcase
        
        case (wdsel)
            2'h1: begin
                alu_output = 32'hffffffff;
            end
            2'h2: begin
                alu_output = 1'h0;
            end
            default: begin
                alu_output = M_alu_chopsticks_out;
            end
        endcase
    end
    
    
endmodule