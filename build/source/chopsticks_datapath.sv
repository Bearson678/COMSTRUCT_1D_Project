/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module chopsticks_datapath #(
        parameter SLOW_CLOCK_DIV = 5'h15,
        parameter CLOCK_DIVIDER = 5'h1a
    ) (
        input wire p1l_button,
        input wire p1r_button,
        input wire p2r_button,
        input wire p2l_button,
        input wire p1split,
        input wire p2split,
        input wire clk,
        input wire rst,
        output reg [31:0] p1l_score_out,
        output reg [31:0] p1r_score_out,
        output reg [31:0] p2l_score_out,
        output reg [31:0] p2r_score_out,
        output reg [31:0] p1l_avail,
        output reg [31:0] p1r_avail,
        output reg [31:0] p2l_avail,
        output reg [31:0] p2r_avail,
        output reg [31:0] timer_led_out,
        output reg [3:0] debugging,
        output reg slow_clock_out
    );
    logic [31:0] M_game_alu_rd1;
    logic [31:0] M_game_alu_rd2;
    logic [1:0] M_game_alu_asel;
    logic [1:0] M_game_alu_bsel;
    logic [1:0] M_game_alu_wdsel;
    logic [5:0] M_game_alu_alufn_Signal;
    logic [31:0] M_game_alu_alu_output;
    
    alu_expandedwithmuxes game_alu (
        .rd1(M_game_alu_rd1),
        .rd2(M_game_alu_rd2),
        .asel(M_game_alu_asel),
        .bsel(M_game_alu_bsel),
        .wdsel(M_game_alu_wdsel),
        .alufn_Signal(M_game_alu_alufn_Signal),
        .alu_output(M_game_alu_alu_output)
    );
    
    
    localparam _MP_SIZE_1865386088 = 1'h1;
    localparam _MP_DIV_1865386088 = SLOW_CLOCK_DIV;
    localparam _MP_TOP_1865386088 = 1'h0;
    localparam _MP_UP_1865386088 = 1'h1;
    logic [0:0] M_game_timer_clock_value;
    
    counter #(
        .SIZE(_MP_SIZE_1865386088),
        .DIV(_MP_DIV_1865386088),
        .TOP(_MP_TOP_1865386088),
        .UP(_MP_UP_1865386088)
    ) game_timer_clock (
        .rst(rst),
        .clk(clk),
        .value(M_game_timer_clock_value)
    );
    
    
    localparam _MP_SIZE_1786301994 = 1'h1;
    localparam _MP_DIV_1786301994 = CLOCK_DIVIDER;
    localparam _MP_TOP_1786301994 = 1'h0;
    localparam _MP_UP_1786301994 = 1'h1;
    logic [0:0] M_slow_clk_value;
    
    counter #(
        .SIZE(_MP_SIZE_1786301994),
        .DIV(_MP_DIV_1786301994),
        .TOP(_MP_TOP_1786301994),
        .UP(_MP_UP_1786301994)
    ) slow_clk (
        .rst(rst),
        .clk(clk),
        .value(M_slow_clk_value)
    );
    
    
    localparam _MP_SIZE_1255095661 = 4'h8;
    logic [7:0] M_generator_out;
    
    random_number_generator #(
        .SIZE(_MP_SIZE_1255095661)
    ) generator (
        .slow_clk(M_slow_clk_value),
        .refresh(rst),
        .clk(clk),
        .out(M_generator_out)
    );
    
    
    localparam _MP_RISE_682150619 = 1'h1;
    localparam _MP_FALL_682150619 = 1'h0;
    logic M_edge_detector_game_timer_out;
    
    edge_detector #(
        .RISE(_MP_RISE_682150619),
        .FALL(_MP_FALL_682150619)
    ) edge_detector_game_timer (
        .in(M_game_timer_clock_value),
        .clk(clk),
        .out(M_edge_detector_game_timer_out)
    );
    
    
    logic [31:0] M_chopsticks_fsm_regfile_rd2;
    logic [5:0] M_chopsticks_fsm_alufn;
    logic [1:0] M_chopsticks_fsm_asel;
    logic [1:0] M_chopsticks_fsm_bsel;
    logic [1:0] M_chopsticks_fsm_wdsel;
    logic [3:0] M_chopsticks_fsm_regfile_wa;
    logic [3:0] M_chopsticks_fsm_regfile_ra1;
    logic [3:0] M_chopsticks_fsm_regfile_ra2;
    logic M_chopsticks_fsm_regfile_we;
    logic [3:0] M_chopsticks_fsm_debug;
    
    chopsticks_fsm chopsticks_fsm (
        .p1l_button(p1l_button),
        .p1r_button(p1r_button),
        .p2l_button(p2l_button),
        .p2r_button(p2r_button),
        .p1split(p1split),
        .p2split(p2split),
        .decrease_timer(M_edge_detector_game_timer_out),
        .rst(rst),
        .rng(M_generator_out[1'h0]),
        .clk(clk),
        .regfile_rd2(M_chopsticks_fsm_regfile_rd2),
        .alufn(M_chopsticks_fsm_alufn),
        .asel(M_chopsticks_fsm_asel),
        .bsel(M_chopsticks_fsm_bsel),
        .wdsel(M_chopsticks_fsm_wdsel),
        .regfile_wa(M_chopsticks_fsm_regfile_wa),
        .regfile_ra1(M_chopsticks_fsm_regfile_ra1),
        .regfile_ra2(M_chopsticks_fsm_regfile_ra2),
        .regfile_we(M_chopsticks_fsm_regfile_we),
        .debug(M_chopsticks_fsm_debug)
    );
    
    
    logic [31:0] M_game_regfiles_data;
    logic [31:0] M_game_regfiles_rd1;
    logic [31:0] M_game_regfiles_rd2;
    logic [31:0] M_game_regfiles_p1l_score_out;
    logic [31:0] M_game_regfiles_p1r_score_out;
    logic [31:0] M_game_regfiles_p2l_score_out;
    logic [31:0] M_game_regfiles_p2r_score_out;
    logic [31:0] M_game_regfiles_p1l_avail_out;
    logic [31:0] M_game_regfiles_p1r_avail_out;
    logic [31:0] M_game_regfiles_p2l_avail_out;
    logic [31:0] M_game_regfiles_p2r_avail_out;
    logic [31:0] M_game_regfiles_timer_out;
    
    game_regfiles game_regfiles (
        .we(M_chopsticks_fsm_regfile_we),
        .wa(M_chopsticks_fsm_regfile_wa),
        .ra1(M_chopsticks_fsm_regfile_ra1),
        .ra2(M_chopsticks_fsm_regfile_ra2),
        .rst(rst),
        .clk(clk),
        .data(M_game_regfiles_data),
        .rd1(M_game_regfiles_rd1),
        .rd2(M_game_regfiles_rd2),
        .p1l_score_out(M_game_regfiles_p1l_score_out),
        .p1r_score_out(M_game_regfiles_p1r_score_out),
        .p2l_score_out(M_game_regfiles_p2l_score_out),
        .p2r_score_out(M_game_regfiles_p2r_score_out),
        .p1l_avail_out(M_game_regfiles_p1l_avail_out),
        .p1r_avail_out(M_game_regfiles_p1r_avail_out),
        .p2l_avail_out(M_game_regfiles_p2l_avail_out),
        .p2r_avail_out(M_game_regfiles_p2r_avail_out),
        .timer_out(M_game_regfiles_timer_out)
    );
    
    
    always @* begin
        M_chopsticks_fsm_regfile_rd2 = M_game_regfiles_rd2;
        M_game_alu_rd1 = M_game_regfiles_rd1;
        M_game_alu_rd2 = M_game_regfiles_rd2;
        M_game_alu_asel = M_chopsticks_fsm_asel;
        M_game_alu_bsel = M_chopsticks_fsm_bsel;
        M_game_alu_wdsel = M_chopsticks_fsm_wdsel;
        M_game_alu_alufn_Signal = M_chopsticks_fsm_alufn;
        M_game_regfiles_data = M_game_alu_alu_output;
        p1l_score_out = M_game_regfiles_p1l_score_out;
        p1r_score_out = M_game_regfiles_p1r_score_out;
        p2l_score_out = M_game_regfiles_p2l_score_out;
        p2r_score_out = M_game_regfiles_p2r_score_out;
        p1l_avail = M_game_regfiles_p1l_avail_out;
        p1r_avail = M_game_regfiles_p1r_avail_out;
        p2l_avail = M_game_regfiles_p2l_avail_out;
        p2r_avail = M_game_regfiles_p2r_avail_out;
        timer_led_out = M_game_regfiles_timer_out;
        debugging = M_chopsticks_fsm_debug;
        slow_clock_out = M_game_timer_clock_value;
    end
    
    
endmodule